@page "/fetchdata"

@using Amusoft.PCR.Server.Data
@inject WeatherForecastService ForecastService
@inject IHttpClientFactory HttpClientFactory

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from a service.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
	<Button Enabled="@(_serviceValue != null)" OnClick="async () => await LoadTestControllerValue()">Reload</Button>

	@if (_serviceValue == null)
	{
		<ProgressBar></ProgressBar>
	}
	else
	{
		<p style="margin-top: 15px;">@_serviceValue</p>
	}

	<table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
	private WeatherForecast[] forecasts;

	private string _serviceValue;

	protected override async Task OnInitializedAsync()
	{
		forecasts = await ForecastService.GetForecastAsync(DateTime.Now);
		await LoadTestControllerValue();
	}

	private async Task LoadTestControllerValue()
	{
		_serviceValue = null;
		var httpClient = HttpClientFactory.CreateClient("local");
		_serviceValue = await httpClient.GetStringAsync("/Test/Index");
	}

}
