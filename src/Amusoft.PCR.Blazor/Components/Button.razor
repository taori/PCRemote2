<button class="@ButtonClass @CssClass" disabled="@(!EnabledInternal)" @onclick="d => OnClick.InvokeAsync(d)">@ChildContent</button>

@code {

	[Parameter]
	public bool Primary { get; set; } = true;

	[Parameter]
	public bool Enabled
	{
		get => EnabledInternal;
		set => EnabledInternal = value;
	}

	[Parameter]
	public string CssClass { get; set; }

	[Parameter]
	public RenderFragment ChildContent { get; set; }

	[Parameter]
	public EventCallback<MouseEventArgs> OnClick { get; set; }

	public string ButtonClass { get; set; }

	private bool EnabledInternal { get; set; } = true;

	/// <inheritdoc />
	protected override void OnParametersSet()
	{
		base.OnParametersSet();
		var classThemeClass = Primary ? "btn-primary" : string.Empty;
		var classEnabled = Enabled ? string.Empty : "disabled";

		ButtonClass = $"btn {classEnabled} {classThemeClass}";
	}
}