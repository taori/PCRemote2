name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
    paths: "src/*"
  pull_request:
    branches: [ master ]
    paths: "src/*"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
env:
  ANDROID_KEYSTORE: ${{ secrets.ANDROID_KEYSTORE }}
  ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
  ANDROID_KEY_PASS: ${{ secrets.ANDROID_KEY_PASS }}
  ANDROID_KEYSTORE_PASS: ${{ secrets.ANDROID_KEYSTORE_PASS }}
  WS: ${{ github.workspace }}


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  Android:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2      
      - name: setup-msbuild
        uses: microsoft/setup-msbuild@v1.0.2
        with:
          # Version of Visual Studio to search; defaults to latest if not specified
          vs-version: 16.9
      - shell : bash
        run: |
          echo -n "$ANDROID_KEYSTORE" > "$WS\android.keystore.encoded"
          base64 --decode "$WS\android.keystore.encoded" > "$WS\android.keystore"      
      - shell: pwsh
        run: |
          msbuild src/Amusoft.PCR.Mobile.Droid/Amusoft.PCR.Mobile.Droid.csproj /verbosity:minimal /restore /t:"SignAndroidPackage" /bl /p:Configuration=Release /p:OutputPath="$env:WS\artifacts" /p:AndroidKeyStore=true /p:AndroidSigningKeyAlias="$env:ANDROID_KEY_ALIAS" /p:AndroidSigningKeyPass="$env:ANDROID_KEY_PASS" /p:AndroidSigningKeyStore="$env:WS\android.keystore" /p:AndroidSigningStorePass="$env:ANDROID_KEYSTORE_PASS"
          Remove-Item "$env:WS\android.keystore.encoded"
          Remove-Item "$env:WS\android.keystore"
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2.2.4
        with:
          name: apk
          path: "**/*-Signed.apk"          
          if-no-files-found: error
          retention-days: 14
          
      - name: version
        #run: echo "::set-output name=version::$(./bin/azblogfilter --version)"
        #run: echo "::set-output name=version::release-${{ github.sha }}"        
        shell: pwsh
        run: |
          $trimmedSha = $("${{ github.sha }}").Substring(0,27)
          echo "::set-output name=version::ci-release-$trimmedSha"  
        id: version
        
      - name: release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: false
          release_name: ${{ steps.version.outputs.version }}
          tag_name: ${{ steps.version.outputs.version }}
          #body_path: CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ github.token }}
          
      - name: Download a Build Artifact
        uses: actions/download-artifact@v2.0.10
        with:
          # Artifact name
          name: apk
          # Destination path
          path: ${{ github.workspace }}
          
      - id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ${{ github.workspace }}
          asset_name: amusoft.pcr.mobile.droid-Signed.apk
          asset_content_type: application/vnd.android.package-archive
          #asset_content_type: application/octet-stream
          
          
      #- name: Upload Release Assets
      # You may pin to the exact commit or the version.
      # uses: alexellis/upload-assets@5586bc227f8525a5e3525e6edf64da5350bfb5b1
      #  uses: alexellis/upload-assets@0.3.0
      #  env:          
       #   GITHUB_TOKEN: ${{ github.token }}
      #  with:
       #   #asset_content_type: "application/vnd.android.package-archive"
       #   asset_paths: '[ "**/*-Signed.apk" ]'

          
